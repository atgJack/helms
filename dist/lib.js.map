{"version":3,"file":null,"sources":["../lib/copy.js","../lib/compare.js","../lib/merge.js"],"sourcesContent":["function copy(obj) {\n  let clone;\n\n  // Return literals.\n  if (!(obj instanceof Object)) return obj;\n\n  // Create clone object with proper params.\n  const Constructor = obj.constructor;\n  switch (Constructor) {\n    case Date:\n    case RegExp:\n      clone = new Constructor(obj);\n      break;\n    default:\n      clone = new Constructor();\n  }\n\n  // Copy each property.\n  for (const property in obj) {\n    if (Object.hasOwnProperty.call(obj, property)) {\n      clone[property] = copy(obj[property]);\n    }\n  }\n\n  return clone;\n}\n\nexport default copy;\n","// Check for objects that allow string comparisons.\nfunction checkInstance(a, b) {\n  return (a instanceof Date && b instanceof Date) ||\n    (a instanceof RegExp && b instanceof RegExp) ||\n    (a instanceof String && b instanceof String) ||\n    (a instanceof Number && b instanceof Number);\n}\n\nfunction isPrototype(a, b) {\n  return Object.isPrototypeOf.call(a, b) || Object.isPrototypeOf.call(b, a);\n}\n\nfunction compare(a, b) {\n\n  // Check same literal value or same object reference.\n  if (a === b) return true;\n  if (a === null || b === null) return false;\n\n  // Check types and short-circit on non-objects.\n  const type = typeof(a);\n  if (type !== typeof(b)) return false;\n  if (type === 'number' && isNaN(a) && isNaN(b)) return true;\n  if (type !== 'object') return a === b;\n  if (checkInstance(a, b)) return a.toString() === b.toString();\n\n  // Check object equivalence.\n  if (isPrototype(a, b)) return false;\n  if (a.constructor !== b.constructor) return false;\n  if (a.prototype !== b.prototype) return false;\n  if (Object.keys(a).length !== Object.keys(b).length) return false;\n  for (const property in a) {\n    if (!compare(a[property], b[property])) return false;\n  }\n\n  // Must be the same.\n  return true;\n}\n\nexport default compare;\n","import compare from './compare';\n\nconst constructors = [Date, RegExp, String, Number];\n\nfunction merge(a, b) {\n  if (!(a instanceof Object) || !(b instanceof Object)) {\n    throw new TypeError('You can only merge objects.');\n  }\n  for (const property in b) {\n    if (Object.hasOwnProperty.call(b, property)) {\n      const oldProp = a[property];\n      const newProp = b[property];\n      if (!compare(oldProp, newProp)) {\n        if (constructors.indexOf(newProp.constructor) !== -1) {\n          a[property] = newProp;\n        } else if (newProp instanceof Object && oldProp instanceof Object) {\n          merge(oldProp, newProp);\n        } else {\n          a[property] = newProp;\n        }\n      }\n    }\n  }\n}\n\nexport default merge;\n"],"names":["copy","obj","clone","Object","Constructor","constructor","Date","RegExp","property","hasOwnProperty","call","checkInstance","a","b","String","Number","isPrototype","isPrototypeOf","compare","type","isNaN","toString","prototype","keys","length","merge","TypeError","oldProp","newProp","constructors","indexOf"],"mappings":"gMAAA,SAASA,GAAKC,MACRC,eAGED,YAAeE,SAAS,MAAOF,MAG/BG,GAAcH,EAAII,mBAChBD,OACDE,UACAC,UACK,GAAIH,GAAYH,mBAGhB,GAAIG,OAIX,GAAMI,KAAYP,GACjBE,OAAOM,eAAeC,KAAKT,EAAKO,OAC5BA,GAAYR,EAAKC,EAAIO,WAIxBN,GCvBT,QAASS,GAAcC,EAAGC,SAChBD,aAAaN,OAAQO,YAAaP,OACvCM,YAAaL,SAAUM,YAAaN,SACpCK,YAAaE,SAAUD,YAAaC,SACpCF,YAAaG,SAAUF,YAAaE,QAGzC,QAASC,GAAYJ,EAAGC,SACfV,QAAOc,cAAcP,KAAKE,EAAGC,IAAMV,OAAOc,cAAcP,KAAKG,EAAGD,GAGzE,QAASM,GAAQN,EAAGC,MAGdD,IAAMC,EAAG,OAAO,KACV,OAAND,GAAoB,OAANC,EAAY,OAAO,KAG/BM,sBAAcP,iBAAAA,MAChBO,wBAAgBN,iBAAAA,IAAI,OAAO,KAClB,WAATM,GAAqBC,MAAMR,IAAMQ,MAAMP,GAAI,OAAO,KACzC,WAATM,EAAmB,MAAOP,KAAMC,KAChCF,EAAcC,EAAGC,GAAI,MAAOD,GAAES,aAAeR,EAAEQ,cAG/CL,EAAYJ,EAAGC,GAAI,OAAO,KAC1BD,EAAEP,cAAgBQ,EAAER,YAAa,OAAO,KACxCO,EAAEU,YAAcT,EAAES,UAAW,OAAO,KACpCnB,OAAOoB,KAAKX,GAAGY,SAAWrB,OAAOoB,KAAKV,GAAGW,OAAQ,OAAO,MACvD,GAAMhB,KAAYI,OAChBM,EAAQN,EAAEJ,GAAWK,EAAEL,IAAY,OAAO,SAI1C,EC/BT,QAASiB,GAAMb,EAAGC,QACVD,YAAaT,SAAaU,YAAaV,cACrC,IAAIuB,WAAU,mCAEjB,GAAMlB,KAAYK,MACjBV,OAAOM,eAAeC,KAAKG,EAAGL,GAAW,IACrCmB,GAAUf,EAAEJ,GACZoB,EAAUf,EAAEL,EACbU,GAAQS,EAASC,KAChBC,EAAaC,QAAQF,EAAQvB,gBAAiB,IAC9CG,GAAYoB,EACLA,YAAmBzB,SAAUwB,YAAmBxB,UACnDwB,EAASC,KAEbpB,GAAYoB,oNAhBlBC,GAAgBvB,KAAMC,OAAQO,OAAQC"}