{"version":3,"file":null,"sources":["../lib/copy.js","../lib/compare.js","../lib/merge.js"],"sourcesContent":["function copy(obj) {\n  let clone;\n\n  // Return literals.\n  if (!(obj instanceof Object)) return obj;\n\n  // Create clone object with proper params.\n  const Constructor = obj.constructor;\n  switch (Constructor) {\n    case Date:\n    case Map:\n    case Set:\n    case RegExp:\n      clone = new Constructor(obj);\n      break;\n    case Promise:\n      clone = new Constructor((resolve, reject) => {\n        resolve(obj.then);\n        reject(obj.catch);\n      });\n      break;\n    // case WeakMap:\n    // case WeakSet:\n    default:\n      clone = new Constructor();\n  }\n\n  // Copy each property.\n  for (const property in obj) {\n    if (Object.hasOwnProperty.call(obj, property)) {\n      clone[property] = copy(obj[property]);\n    }\n  }\n\n  return clone;\n}\n\nexport default copy;\n","// Check for objects that allow string comparisons.\nfunction checkInstance(a, b) {\n  return (a instanceof Date && b instanceof Date) ||\n    (a instanceof RegExp && b instanceof RegExp) ||\n    (a instanceof String && b instanceof String) ||\n    (a instanceof Number && b instanceof Number);\n}\n\n// Check if a is a Map or a Set.\nfunction isMapSet(a) {\n  return a.constructor === Map || a.constructor === Set;\n}\n\n// Compare Maps and Sets.\nfunction checkMapSet(a, b) {\n  if (a.size !== b.size) return false;\n  for (const item of b) {\n    if (a.constructor === Map) {\n      const [key, val] = item;\n      if (!a.has(key)) return false;\n      if (a.get(key) !== val) return false;\n    } else if (!a.has(item)) return false;\n  }\n  return true;\n}\n\nfunction isPrototype(a, b) {\n  return Object.isPrototypeOf.call(a, b) || Object.isPrototypeOf.call(b, a);\n}\n\nfunction compare(a, b) {\n\n  // Check same literal value or same object reference.\n  if (a === b) return true;\n  if (a === null || b === null) return false;\n\n  // Check types and short-circit on non-objects.\n  const type = typeof(a);\n  if (type !== typeof(b)) return false;\n  if (type === 'number' && isNaN(a) && isNaN(b)) return true;\n  if (type !== 'object') return a === b;\n  if (checkInstance(a, b)) return a.toString() === b.toString();\n\n  // Check object equivalence.\n  if (isPrototype(a, b)) return false;\n  if (a.constructor !== b.constructor) return false;\n  if (isMapSet(a) && !checkMapSet(a, b)) return false;\n  if (a.prototype !== b.prototype) return false;\n  if (Object.keys(a).length !== Object.keys(b).length) return false;\n  for (const property in a) {\n    if (!compare(a[property], b[property])) return false;\n  }\n\n  // Must be the same.\n  return true;\n}\n\nexport default compare;\n","import compare from './compare';\n\nconst constructors = [Date, RegExp, String, Number, Map, WeakMap, Set, WeakSet, Promise];\n\nfunction merge(a, b) {\n  if (!(a instanceof Object) || !(b instanceof Object)) {\n    throw new TypeError('You can only merge objects.');\n  }\n  for (const property in b) {\n    if (Object.hasOwnProperty.call(b, property)) {\n      const oldProp = a[property];\n      const newProp = b[property];\n      if (!compare(oldProp, newProp)) {\n        if (newProp === undefined) {\n          delete a[property];\n        } else if (newProp === null) {\n          a[property] = null;\n        // Node requires the ._c for Sets and Maps.\n        } else if (constructors.indexOf(newProp.constructor) !== -1 || !!newProp._c) {\n          a[property] = newProp;\n        } else if (newProp instanceof Object && oldProp instanceof Object) {\n          merge(oldProp, newProp);\n        } else {\n          a[property] = newProp;\n        }\n      }\n    }\n  }\n}\n\nexport default merge;\n"],"names":["copy","obj","clone","Object","Constructor","constructor","Date","Map","Set","RegExp","Promise","resolve","reject","then","catch","property","hasOwnProperty","call","checkInstance","a","b","String","Number","isMapSet","checkMapSet","size","item","key","val","has","get","isPrototype","isPrototypeOf","compare","type","isNaN","toString","prototype","keys","length","constructors","WeakMap","WeakSet","merge","TypeError","oldProp","newProp","undefined","indexOf","_c"],"mappings":"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"}