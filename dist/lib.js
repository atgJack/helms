!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t(e.helms=e.helms||{})}(this,function(e){"use strict";function t(e){var n=void 0;if(!(e instanceof Object))return e;var r=e.constructor;switch(r){case Date:case RegExp:n=new r(e);break;default:n=new r}for(var o in e)n[o]=t(e[o]);return n}function n(e,t){if(e===t)return!0;if(null===e||null===t)return!1;var o="undefined"==typeof e?"undefined":i(e);if(o!==("undefined"==typeof t?"undefined":i(t)))return!1;if("number"===o&&isNaN(e)&&isNaN(t))return!0;if("object"!==o)return e===t;if(r(e,t))return e.toString()===t.toString();if(e.isPrototypeOf(t)||t.isPrototypeOf(e))return!1;if(e.constructor!==t.constructor)return!1;if(e.prototype!==t.prototype)return!1;if(Object.keys(e).length!==Object.keys(t).length)return!1;for(var f in e)if(!n(e[f],t[f]))return!1;return!0}function r(e,t){return e instanceof Date&&t instanceof Date||e instanceof RegExp&&t instanceof RegExp||e instanceof String&&t instanceof String||e instanceof Number&&t instanceof Number}function o(e,t){if(!(e instanceof Object&&t instanceof Object))throw new TypeError("You can only merge objects.");for(var r in t){var i=e[r],c=t[r];n(i,c)||(f.indexOf(c.constructor)!==-1?e[r]=c:c instanceof Object&&i instanceof Object?o(i,c):e[r]=c)}}var i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},f=[Date,RegExp,String,Number];e.copy=t,e.compare=n,e.merge=o,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=lib.js.map
